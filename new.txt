pipeline {
    agent any

    environment {
        // Define environment variables
        PROJECT_NAME = 'example-project'
        IMAGE_NAME = 'example-project-image'
        REGISTRY_URL = 'dockerhub_username'
        KUBECONFIG = credentials('kubeconfig-credentials-id')
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out code...'
                checkout scm
            }
        }

        stage('Build') {
            steps {
                echo 'Building the project...'
                sh 'mvn clean compile'
            }
        }

        stage('Test') {
            steps {
                echo 'Running unit tests...'
                sh 'mvn test'
            }
        }

        stage('Package') {
            steps {
                echo 'Packaging the application...'
                sh 'mvn package'
                archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
            }
        }

        stage('Docker Build & Push') {
            steps {
                echo 'Building Docker image...'
                sh """
                docker build -t ${REGISTRY_URL}/${IMAGE_NAME}:${BUILD_NUMBER} .
                docker push ${REGISTRY_URL}/${IMAGE_NAME}:${BUILD_NUMBER}
                """
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                echo 'Deploying to Kubernetes...'
                withKubeConfig([credentialsId: KUBECONFIG]) {
                    sh """
                    kubectl apply -f k8s/deployment.yaml
                    kubectl set image deployment/${PROJECT_NAME} ${PROJECT_NAME}=${REGISTRY_URL}/${IMAGE_NAME}:${BUILD_NUMBER}
                    """
                }
            }
        }
    }

    post {
        always {
            echo 'Cleaning up workspace...'
            cleanWs()
        }
        success {
            echo 'Pipeline completed successfully.'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}
